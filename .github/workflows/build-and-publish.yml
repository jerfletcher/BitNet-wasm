name: Build and Publish BitNet-WASM

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      with:
        submodules: recursive
        
    - name: Setup Node.js
      uses: actions/setup-node@v4.4.0
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: '3.11'
        
    - name: Cache Emscripten SDK
      uses: actions/cache@v4.2.3
      with:
        path: emsdk
        key: ${{ runner.os }}-emsdk-4.0.8
        restore-keys: |
          ${{ runner.os }}-emsdk-
          
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        
    - name: Install Python dependencies
      run: |
        pip install huggingface_hub
        
    - name: Install Emscripten SDK
      run: |
        if [ ! -d "emsdk" ]; then
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install 4.0.8
          ./emsdk activate 4.0.8
        else
          cd emsdk
          ./emsdk activate 4.0.8
        fi
        
    - name: Build BitNet-WASM
      run: |
        source ./emsdk/emsdk_env.sh
        ./build.sh
        
    - name: Create distribution package
      run: |
        mkdir -p dist
        cp bitnet.js dist/
        cp bitnet.wasm dist/
        cp -r example dist/
        cp README.md dist/
        cp LICENSE dist/
        
        # Create release info file
        cat > dist/release-info.json << EOF
        {
          "name": "bitnet-wasm",
          "version": "0.1.0",
          "description": "WebAssembly port of Microsoft's BitNet.cpp for efficient 1.58-bit neural network inference",
          "main": "bitnet.js",
          "types": "bitnet.d.ts",
          "files": [
            "bitnet.js",
            "bitnet.wasm",
            "bitnet.d.ts",
            "README.md",
            "LICENSE"
          ],
          "keywords": [
            "bitnet",
            "webassembly",
            "wasm",
            "neural-network",
            "quantization",
            "ai",
            "machine-learning"
          ],
          "author": "jerfletcher",
          "license": "MIT",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/jerfletcher/BitNet-wasm.git"
          },
          "bugs": {
            "url": "https://github.com/jerfletcher/BitNet-wasm/issues"
          },
          "homepage": "https://github.com/jerfletcher/BitNet-wasm#readme"
        }
        EOF
        
        # Create TypeScript definitions
        cat > dist/bitnet.d.ts << EOF
        interface BitNetModule {
          _bitnet_init(): void;
          _bitnet_load_model(dataPtr: number, size: number): number;
          _bitnet_inference_run(inputPtr: number, outputPtr: number, maxLen: number): number;
          _bitnet_get_model_info(vocabPtr: number, embdPtr: number, layerPtr: number): void;
          _bitnet_is_model_loaded(): number;
          _bitnet_free_model(): void;
          _malloc(size: number): number;
          _free(ptr: number): void;
          HEAPU8: Uint8Array;
          HEAPF32: Float32Array;
          HEAP8: Int8Array;
          HEAP32: Int32Array;
          writeStringToMemory(str: string, ptr: number): void;
          lengthBytesUTF8(str: string): number;
          stringToUTF8(str: string, ptr: number, maxBytes: number): void;
        }
        
        declare function BitNetModule(): Promise<BitNetModule>;
        export default BitNetModule;
        EOF
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: bitnet-wasm-dist
        path: dist/
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2.3.2
      with:
        files: |
          dist/bitnet.js
          dist/bitnet.wasm
          dist/bitnet.d.ts
          dist/release-info.json
        body: |
          ## BitNet-WASM Release
          
          This release contains the compiled WebAssembly module for BitNet inference.
          
          ### Files:
          - `bitnet.js` - JavaScript loader and interface
          - `bitnet.wasm` - WebAssembly module
          - `bitnet.d.ts` - TypeScript definitions
          - `release-info.json` - Release metadata
          
          ### Usage:
          
          **Direct Download:**
          Download the files above and include them in your project.
          
          **CDN (jsDelivr):**
          ```javascript
          import BitNetModule from 'https://cdn.jsdelivr.net/gh/jerfletcher/BitNet-wasm@latest/bitnet.js';
          ```
          
          **GitHub Pages Demo:**
          Try the live demo at: https://jerfletcher.github.io/BitNet-wasm
          
          See the [Integration Guide](https://github.com/jerfletcher/BitNet-wasm/blob/main/INTEGRATION.md) for complete instructions.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

        
  deploy-pages:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: bitnet-wasm-dist
        path: dist/
        
    - name: Setup Pages
      uses: actions/configure-pages@v5.0.0
      
    - name: Create Pages content
      run: |
        mkdir -p pages
        
        # Copy the docs folder as the main site
        cp -r docs/* pages/
        
        # Add the latest built files
        cp dist/bitnet.js pages/
        cp dist/bitnet.wasm pages/
        
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: pages/
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4.0.5